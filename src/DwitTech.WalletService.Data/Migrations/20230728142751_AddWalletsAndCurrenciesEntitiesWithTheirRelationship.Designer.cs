// <auto-generated />
using System;
using DwitTech.WalletService.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DwitTech.WalletService.Data.Migrations
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20230728142751_AddWalletsAndCurrenciesEntitiesWithTheirRelationship")]
    partial class AddWalletsAndCurrenciesEntitiesWithTheirRelationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DwitTech.WalletService.Data.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NGN",
                            CreatedBy = "Seed Data",
                            CreatedOnUtc = new DateTime(2023, 7, 28, 14, 27, 50, 948, DateTimeKind.Utc).AddTicks(8953),
                            Name = "Nigerian Naira"
                        },
                        new
                        {
                            Id = 2,
                            Code = "USD",
                            CreatedBy = "Seed Data",
                            CreatedOnUtc = new DateTime(2023, 7, 28, 14, 27, 50, 948, DateTimeKind.Utc).AddTicks(8958),
                            Name = "US Dollar"
                        },
                        new
                        {
                            Id = 3,
                            Code = "GBP",
                            CreatedBy = "Seed Data",
                            CreatedOnUtc = new DateTime(2023, 7, 28, 14, 27, 50, 948, DateTimeKind.Utc).AddTicks(8960),
                            Name = "British Pound"
                        },
                        new
                        {
                            Id = 4,
                            Code = "EUR",
                            CreatedBy = "Seed Data",
                            CreatedOnUtc = new DateTime(2023, 7, 28, 14, 27, 50, 948, DateTimeKind.Utc).AddTicks(8961),
                            Name = "European Euro"
                        },
                        new
                        {
                            Id = 5,
                            Code = "CAD",
                            CreatedBy = "Seed Data",
                            CreatedOnUtc = new DateTime(2023, 7, 28, 14, 27, 50, 948, DateTimeKind.Utc).AddTicks(8963),
                            Name = "Canadian Dollar"
                        });
                });

            modelBuilder.Entity("DwitTech.WalletService.Data.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("DwitTech.WalletService.Data.Entities.Wallet", b =>
                {
                    b.HasOne("DwitTech.WalletService.Data.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });
#pragma warning restore 612, 618
        }
    }
}
